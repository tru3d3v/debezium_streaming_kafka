version: '3.5'

services:

  zookeeper:
    image: quay.io/strimzi/kafka:0.23.0-kafka-2.8.0
    command: [
      "sh", "-c",
      "bin/zookeeper-server-start.sh config/zookeeper.properties"
    ]
    ports:
      - "2181:2181"
      - "2888:2888"
      - "3888:3888"
    environment:
      LOG_DIR: /tmp/logs
    
  kafka:
    image: quay.io/strimzi/kafka:0.23.0-kafka-2.8.0
    command: [
      "sh", "-c",
      "bin/kafka-server-start.sh config/server.properties --override listeners=$${KAFKA_LISTENERS} --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT}"
    ]
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      LOG_DIR: "/tmp/logs"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
 
  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8085:8080
    depends_on:
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_METRICS_PORT: 11001
      KAFKA_CLUSTERS_0_METRICS_TYPE: PROMETHEUS
  mysql_master:
    image: mysql:8.0
    env_file:
      - ./master/mysql_master.env
    container_name: "mysql_master"
    restart: "no"
    ports:
      - 4406:3306
    volumes:
      - ./master/conf/mysql.conf.cnf:/etc/mysql/conf.d/mysql.conf.cnf
      - ./master/data:/var/lib/mysql
    

  mysql_slave:
    image: mysql:8.0
    env_file:
      - ./slave/mysql_slave.env
    container_name: "mysql_slave"
    restart: "no"
    ports:
      - 5506:3306
    depends_on:
      - mysql_master
    volumes:
      - ./slave/conf/mysql.conf.cnf:/etc/mysql/conf.d/mysql.conf.cnf
      - ./slave/data:/var/lib/mysql
  
  mysql_master2:
    image: mysql:8.0
    env_file:
      - ./master2/mysql_master.env
    container_name: "mysql_master2"
    restart: "no"
    ports:
      - 6606:3306
    volumes:
      - ./master2/conf/mysql.conf.cnf:/etc/mysql/conf.d/mysql.conf.cnf
      - ./master2/data:/var/lib/mysql
    

  mysql_slave2:
    image: mysql:8.0
    env_file:
      - ./slave2/mysql_slave.env
    container_name: "mysql_slave2"
    restart: "no"
    ports:
      - 7706:3306
    depends_on:
      - mysql_master2
    volumes:
      - ./slave2/conf/mysql.conf.cnf:/etc/mysql/conf.d/mysql.conf.cnf
      - ./slave2/data:/var/lib/mysql
  mysql_master3:
    image: mysql:8.0
    env_file:
      - ./master3/mysql_master.env
    container_name: "mysql_master3"
    restart: "no"
    ports:
      - 8806:3306
    volumes:
      - ./master3/conf/mysql.conf.cnf:/etc/mysql/conf.d/mysql.conf.cnf
      - ./master3/data:/var/lib/mysql

  mysql_slave3:
    image: mysql:8.0
    env_file:
      - ./slave3/mysql_slave.env
    container_name: "mysql_slave3"
    restart: "no"
    ports:
      - 9906:3306
    depends_on:
      - mysql_master3
    volumes:
      - ./slave3/conf/mysql.conf.cnf:/etc/mysql/conf.d/mysql.conf.cnf
      - ./slave3/data:/var/lib/mysql

  connect:
    image: local/debezium/connect
    build:
      dockerfile: Dockerfile
    ports:
     - 8083:8083
    depends_on:
      - kafka
    environment:
     - BOOTSTRAP_SERVERS=kafka:9092
     - GROUP_ID=1
     - CONFIG_STORAGE_TOPIC=my_connect_configs
     - OFFSET_STORAGE_TOPIC=my_connect_offsets
     - STATUS_STORAGE_TOPIC=my_connect_statuses
  mongodb-community:
    image: mongodb/mongodb-community-server:7.0.1-ubuntu2204
    ports:
      - '27017:27017'
    environment:
      - MONGO_INITDB_ROOT_USERNAME=user
      - MONGO_INITDB_ROOT_PASSWORD=pass
    volumes:
      - type: bind
        source: ./data
        target: /data/db
  service:
    image: sempro/app-service/dedupe-engine:1.0-${QUARKUS_MODE:-jvm}
    build:
      context: sempro/app-service
      dockerfile: src/main/docker/Dockerfile.${QUARKUS_MODE:-jvm}
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    ports:
      - "8080:8080"
    depends_on:
      - connect

